class Product:
    def __init__(self, name, weight, category):
        self.name = name
        self.weight = weight
        self.category = category

    def __str__(self):
        return f'{self.name}, {self.weight}, {self.category}'


class Shop:
    __file_name = 'products.txt'

    def get_products(self):
        file = open(self.__file_name, 'r')
        products = file.read()
        file.close()
        return products

    def add(self, *products):
        existing_products = self.get_products().strip().split('\n')
        existing_dict = {}

        for product_str in existing_products:
            if product_str:  
                parts = product_str.split(', ')
                if len(parts) == 3:  
                    name, weight, category = parts
                    existing_dict[(name, category)] = float(weight)

        for product in products:
            key = (product.name, product.category)
            if key in existing_dict:
                existing_dict[key] += product.weight
                print(f'Продукт {product.name} уже был в магазине, его общий вес теперь равен {existing_dict[key]}')
            else:
                existing_dict[key] = product.weight

        file = open(self.__file_name, 'w')
        for (name, category), weight in existing_dict.items():
            file.write(f'{name}, {weight}, {category}\n')
        file.close()

s1 = Shop()

p1 = Product('Potato', 50.5, 'Vegetables')
p2 = Product('Spaghetti', 3.4, 'Groceries')
p3 = Product('Potato', 5.5, 'Vegetables')

s1.add(p1, p2, p3)

print(s1.get_products())
